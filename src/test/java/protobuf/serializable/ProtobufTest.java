/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package protobuf.serializable;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import com.test.GpsData;
import com.test.GpsDataProto;
import com.test.GpsDataProto.gps_data;

import org.junit.Assert;
import org.junit.Test;

import protobuf.serializable.annotation.CollectionType;
import protobuf.serializable.annotation.MapType;
import protobuf.serializable.annotation.TagValue;

public class ProtobufTest {
    static class SubClass {
        String sub;
        @MapType(keyType = String.class, valueType = Integer.class)
        Map<String, Integer> map;
    }
    static class MyClass {
        String name;
        int value;
        @TagValue(6)
        float fot;
        @CollectionType(String.class)
        List<String> stringList;
        SubClass sub;
    }

    @Test
    public void outputMethod() throws IOException, InstantiationException, IllegalAccessException {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        ProtobufOutput protobufOutput = new ProtobufOutput(byteArrayOutputStream);

        MyClass my = new MyClass();
        my.name = "My class";
        my.value = 101;
        my.fot = 11.3f;
        my.stringList = new ArrayList<>();
        my.stringList.add("first");
        my.stringList.add("second");
        my.sub=new SubClass();
        my.sub.sub="SubString";
        my.sub.map=new TreeMap<>();
        my.sub.map.put("k1", 1);
        my.sub.map.put("k2", 2);
        my.sub.map.put("k3", 3);

        protobufOutput.write(2, my);
        protobufOutput.close();

        byte[] byteArray = byteArrayOutputStream.toByteArray();
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);

        ProtobufInput protobufInput = new ProtobufInput(byteArrayInputStream);
        MyClass you = protobufInput.readClass(2, MyClass.class);
        Assert.assertEquals(my.name, you.name);
        Assert.assertEquals(my.value, you.value);
        Assert.assertTrue(Math.abs(my.fot - you.fot) < 0.0001);
        Assert.assertArrayEquals(my.stringList.toArray(), you.stringList.toArray());

        protobufInput.close();
    }

    @Test
    public void jprobuf()
        throws InstantiationException, IllegalAccessException, IOException {
      GpsDataProto.gps_data.Builder builder =
          GpsDataProto.gps_data.newBuilder();

      builder.setAltitude(1);
      builder.setDataTime("2017-12-17 16:21:44");
      builder.setGpsStatus(1);
      builder.setLat(39.123);
      builder.setLon(120.112);
      builder.setDirection(30.2F);
      builder.setId(100L);

      gps_data data = builder.build();

      ByteArrayInputStream input = new ByteArrayInputStream(data.toByteArray());
      ProtobufInput protobufInput = new ProtobufInput(input);
      GpsData read = protobufInput.readClass(GpsData.class);
      protobufInput.close();

      Assert.assertEquals(data.getAltitude(), read.getAltitude());
      Assert.assertEquals(data.getDataTime(), read.getDataTime());
      Assert.assertEquals(data.getGpsStatus(), read.getGpsStatus());
      Assert.assertTrue(data.getLat() == read.getLat());
      Assert.assertTrue(data.getLon()== read.getLon());
      Assert.assertTrue(data.getDirection() == read.getDirection());
      Assert.assertTrue(data.getId()== read.getId());
    }
}
